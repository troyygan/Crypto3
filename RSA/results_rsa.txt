RSA Encryption-Decryption Started.....
RSA Encrypter/ Decrypter
Using 401 and 409 for generating keys
Generating your public/private keypairs now . . .
value of n is: 164009
Euler's totient value: 163200
value of e is: 134587
value of d is 244723
Your public key is  (134587, 164009)  and your private key is  (244723, 164009)
encrypting message using private key (244723, 164009)
Encrypted message is: 

Decryption Started...
Decrypting message with public key  (134587, 164009)  . . .
Decrypted Message:
When the National Security Agency's invincible code-breaking machine encounters a mysterious code it cannot break, the agency calls its head cryptographer, Susan Fletcher, a brilliant and beautiful mathematician. What she uncovers sends shock waves through the corridors of power. The NSA is being held hostage... not by guns or bombs, but by a code so ingeniously complex that if released it would cripple U.S. intelligence.

----ENCRYPTION TIME----
Start Time:  2019-11-13 03:26:32.241252
End Time:  2019-11-13 03:27:38.369981
Total Time of Execution:  0:01:06.128729


----DECRYPTION TIME----
Start Time:  2019-11-13 03:27:38.370488
End Time:  2019-11-13 03:29:43.510253
Total Time of Execution:  0:02:05.139765


Filename: rsa.py

Line #    Mem usage    Increment   Line Contents
================================================
     7   15.320 MiB   15.320 MiB   @profile
     8                             
     9                             def func_rsa():
    10   15.320 MiB    0.000 MiB     print "RSA Encryption-Decryption Started....."
    11   15.320 MiB    0.000 MiB     before_time_enc = datetime.now()
    12   15.320 MiB    0.000 MiB     r = RSA()
    13   15.320 MiB    0.000 MiB     encrypt = r.encrypt
    14   15.320 MiB    0.000 MiB     decrypt = r.decrypt
    15   15.320 MiB    0.000 MiB     print "RSA Encrypter/ Decrypter"
    16                             
    17                             
    18                             ##If you want to make the script interactive you can uncomment the lines below
    19                             #  p = int(raw_input("Enter a prime number (17, 19, 23, etc): "))
    20                             #  q = int(raw_input("Enter another prime number (Not one you entered above): "))
    21   15.320 MiB    0.000 MiB     p = 401
    22   15.320 MiB    0.000 MiB     q = 409
    23   15.320 MiB    0.000 MiB     print "Using %s and %s for generating keys" % (p, q)
    24   15.320 MiB    0.000 MiB     print "Generating your public/private keypairs now . . ."
    25   15.320 MiB    0.000 MiB     public, private = r.generate_keypair(p, q)
    26   15.320 MiB    0.000 MiB     print "Your public key is ", public ," and your private key is ", private
    27   15.320 MiB    0.000 MiB     print "encrypting message using private key", private
    28                             #  message = raw_input("Enter a message to encrypt with your private key: ")
    29   15.320 MiB    0.000 MiB     with open ("testfile.txt", "rb") as file:
    30   15.320 MiB    0.000 MiB         message = file.read()
    31   16.004 MiB    0.684 MiB     encrypted_msg = encrypt(private, message)
    32   16.004 MiB    0.000 MiB     print "Encrypted message is: "
    33   16.004 MiB    0.000 MiB     print ''.join(map(lambda x: str(x), encrypted_msg))
    34   16.004 MiB    0.000 MiB     after_time_enc = datetime.now()
    35   16.004 MiB    0.000 MiB     total_time_enc = after_time_enc - before_time_enc
    36                             
    37                             
    38                             ###DECRYPTIOn
    39                             
    40   16.004 MiB    0.000 MiB     print "Decryption Started..."
    41   16.004 MiB    0.000 MiB     before_time_dec = datetime.now()
    42   16.004 MiB    0.000 MiB     print "Decrypting message with public key ", public ," . . ."
    43   16.004 MiB    0.000 MiB     print "Decrypted Message:"
    44   15.762 MiB    0.000 MiB     print decrypt(public, encrypted_msg)
    45   15.762 MiB    0.000 MiB     after_time_dec = datetime.now()
    46   15.762 MiB    0.000 MiB     total_time_dec = after_time_dec - before_time_dec
    47                             
    48                             #Timestamps for encryption and decryption
    49   15.762 MiB    0.000 MiB     print "----ENCRYPTION TIME----"
    50   15.762 MiB    0.000 MiB     print "Start Time: ", before_time_enc
    51   15.762 MiB    0.000 MiB     print "End Time: ", after_time_enc
    52   15.762 MiB    0.000 MiB     print "Total Time of Execution: ", total_time_enc
    53   15.762 MiB    0.000 MiB     print "\n"
    54                             
    55   15.762 MiB    0.000 MiB     print "----DECRYPTION TIME----"
    56   15.762 MiB    0.000 MiB     print "Start Time: ", before_time_dec
    57   15.762 MiB    0.000 MiB     print "End Time: ", after_time_dec
    58   15.762 MiB    0.000 MiB     print "Total Time of Execution: ", total_time_dec
    59   15.762 MiB    0.000 MiB     print "\n"


